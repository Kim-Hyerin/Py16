## ch2_exercises.ipynb

## Q1.
# 홍길동 씨의 과목별 점수는 다음과 같다. 홍길동 씨의 평균 점수를 구해 보자.

- 과목	점수
- 국어	80
- 영어	75
- 수학	55

# [Q1] Code
Korean=80
English=75
Math=55
(Korean+English+Math)/3

## Q2.
> 자연수 13이 홀수인지 짝수인지 판별할 수 있는 방법에 대해 말해 보자.

1. 판별 기준
2. 코드


# [Q2] Code
# 1. 판별 기준 : 나머지 연산자를 사용하여 2로 나눈 결과값이 0이 나올 경우 짝수, 1이 나올 경우 홀수이다.
# 2. 코드
13 % 2

## Q3.
> 홍길동 씨의 주민등록번호는 881120-1068234이다. 홍길동 씨의 주민등록번호를 연월일(YYYYMMDD) 부분과 그 뒤의 숫자 부분으로 나누어 출력해 보자.

- 문자열 슬라이싱 기법을 사용해 보자.

# [Q3] Code
a = "881120-1068234"
YYYYMMDD = a[:6]
num = a[7:]
print(YYYYMMDD)
print(num)

## Q4.
> 주민등록번호 뒷자리의 맨 첫 번째 숫자는 성별을 나타낸다. 주민등록번호에서 성별을 나타내는 숫자를 출력해 보자.

- pin = "881120-1068234"
- ※ 문자열 인덱싱 또는 내장함수를 사용해 보자.
- 문자열포맷팅을 이용해서 성별을 출력하시오.

# [Q4] Code
pin = "881120-1068234"
print(pin[7])
print("(1=남자, 2=여자)")

## Q5.
> 다음과 같은 문자열 a:b:c:d가 있다. 문자열의 replace 함수를 사용하여 a#b#c#d로 바꿔서 출력해 보자.

- a = "a:b:c:d"

# [Q5] Code
a = "a:b:c:d"
b = a.replace(":","#")
print(b)


## Q6.
> [1, 3, 5, 4, 2] 리스트를 [5, 4, 3, 2, 1]로 만들어 보자.

- ※ 리스트의 내장 함수를 사용해 보자.

# [Q6] Code

a = [1,3,5,4,2]
a.sort()
a.reverse()
print(a)

## Q7.
> ['Life', 'is', 'too', 'short'] 리스트를 Life is too short 문자열로 만들어 출력해 보자.

- ※ 문자열의 join 함수를 사용하면 리스트를 문자열로 쉽게 만들 수 있다.

# [Q7] Code

" ".join(['Life','is','too','short'])

## Q8.
> (1,2,3) 튜플에 값 4를 추가하여 (1,2,3,4)를 만들어 출력해 보자.

- ※ 더하기(+) 또는 다른 방법들을 사용해 보자.

# [Q8] Code

t1 = (1,2,3)
t2 = (4,)
print(t1 + t2)

## Q9.
> 다음과 같은 딕셔너리 a가 있다.

>> a = dict()  
>> a  
{}

- 다음 중 오류가 발생하는 경우를 고르고, 그 이유를 설명해 보자.

1. a['name'] = 'python'
2. a[('a',)] = 'python'
3. a[[1]] = 'python'
4. a[250] = 'python'

# [Q9] Code & explanation
# 3. a[[1]] = 'python'
# 딕셔너리 Key에 변하는 값인 리스트를 쓸 수 없다.

## Q10.
> 딕셔너리 a에서 'B'에 해당되는 값을 추출해 보자.
>> a = {'A':90, 'B':80, 'C':70}

- ※ 딕셔너리의 pop 함수를 사용해 보자.

# [Q10] Code

a = {'A':90, 'B':80, 'C':70}
result = a.pop('B')
print(a)
print(result)

## Q11.
> a 리스트에서 중복 숫자를 제거해 보자.
>> a = [1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 5]

- ※ 집합 자료형의 요솟값이 중복될 수 없다는 특징을 사용해 보자.

# [Q11] Code

a = [1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 5]
aset = set(a)
b = list(aset)
print(b)


## Q12.
> 파이썬은 다음처럼 동일한 값에 여러 개의 변수를 선언할 수 있다. 다음과 같이 a, b 변수를 선언한 후 a의 두 번째 요솟값을 변경하면 b 값은 어떻게 될까? 그리고 이런 결과가 오는 이유에 대해 설명해 보자.

>> a = b = [1, 2, 3]  
>> a[1] = 4  
>> print(b)  


# [Q12] Code & explanation
# a = [1,4,3]
# b = [1,4,3]
# a, b 모두 동일한 리스트를 가리키고 있기 때문이다.

## 코딩 연습 결과를 github에 올리기
> 완성된 ipython 노트북 파일을 각자의 github에 올리시오.

- github 계정 만들기 (계정이 없는 학생)
    1. github에 sign up (Google gmail 계정을 이용해서 만드시오.)
- github에 노트 올리기
    2. github에 각자의 id로 repo를 만드시오. (한번 만들면 계속 재사용)
    3. pynn repo에 연습결과 노트를 올리시오.
        - 제출노트: ch2_exercises_id.ipynb
